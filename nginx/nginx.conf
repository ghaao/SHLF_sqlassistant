# Upstream 서버 (Node.js 애플리케이션)를 정의합니다.
upstream sql_assistant_app {
    # Docker Compose 서비스 이름인 'sql-assistant'와 포트 '5000'을 사용합니다.
    server sql-assistant:5000;
}

# HTTP (80) 요청을 HTTPS (443)로 리디렉션합니다.
server {
    listen 80;
    server_name your_domain.com; # 여기에 실제 도메인 주소를 입력하세요.
    return 301 https://$host$request_uri;
}

# HTTPS (443) 서버를 설정합니다.
server {
    listen 443 ssl;
    server_name your_domain.com; # 여기에 실제 도메인 주소를 입력하세요.

    # SSL 인증서 경로를 지정합니다.
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;

    # SSL 보안 설정을 강화합니다.
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;

    location / {
        proxy_pass http://sql_assistant_app;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # WebSocket 연결을 위한 설정입니다.
    location /ws {
        proxy_pass http://sql_assistant_app;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
    }
}